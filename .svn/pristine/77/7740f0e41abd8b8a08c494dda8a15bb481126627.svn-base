layui.define(["layer", "element","jquery","env"], function(s) {
    var jquery = layui.jquery;
    var layer = layui.layer;
    var element = layui.element;
    var env = layui.env;
    
    var e = '.layui-layout-admin>.layui-side>.layui-side-scroll';
    var i = ".layui-layout-admin>.layui-header";
    var j = ".layui-layout-admin>.layui-body";
    var n = j + ">.layui-tab";
    var q = j + ">.layui-body-header";
    var i = "admin-pagetabs";
    var d = "admin-side-nav";
    var g = ".layui-layout-admin .site-mobile-shade";
    var c = "theme-admin";
    var l = ".layui-layout-admin.admin-nav-mini>.layui-side .layui-nav .layui-nav-item";
    var k = {};
    var f = false;

    var obj_type = ['object','array'];
    var data_info_row = 0;
    
    var obj = {
        pageTabs: true,//是否开启iframe
        version:true,
        //cacheTab: true,//是否缓存iframe菜单
        mTabList: [],//存储iframe数组
        maxTabNum: 20,//允许开多少个iframe
        mTabPosition: undefined,
        cacheName : 'bloc_cache_data',//缓存数据名称
        defaultTheme: "theme-admin",//默认主题1
        apiUrl:'//'+env.api_url+'/admin/',
        packApiUrl:'//packagebloc.e7j.cn/',
        baseUrl:'//'+env.base_url+'/',
        commonUrl:'//'+env.common_url+'/',
        lang:'zh-cn',
        //table页数以及每页显示的条数
        limit:13,//默认12页
        urlParam:getUrlParam(),//url参数
        get_limit:function(count,limits)
        {
            var arr = [];
            if(limits)
            {
                arr = limits;
            }
            else
            {
                arr = [13,30,60,100,200,500,1000];
            }
            if(count > arr[arr.length -1])
            {
                arr.push(count);
            }
            return arr;
        },
        //获取地址
        getUrl:function(path,type)
        {
            if(type == 'default'){
                return '//'+env.api_url+path;;
            }else{
                return obj.apiUrl+path;
            }


        },
        //xmSelect数据整理
        getSelectVal:function(arr){
            var this_data = [];
            jquery.each(arr,(k,v)=>{
                this_data.push(v.value);
            })
            return this_data;
        },
        getHeader:function(){
            var header = {};
            header.token = obj.getTempData('token');
            header.platform = obj.getTempData('platform');
            return header;
        },
        req:function(json,type)
        {
            jquery.ajax({
                url:obj.getUrl(json.url,type)
                ,headers: obj.getHeader()
                ,type : json.type ? json.type : "post"
                ,dataType: json.dataType ? json.dataType : "json"
                ,data:json.data
                ,async:json.async ? true : json.async
                // ,xhrFields: { withCredentials: true }
                ,success:json.success
                ,dataFilter:function(data, type)
                {

                    //记录当前服务器传递的时间
                    var objData = JSON.parse(data);
                    var time = layui.data('time');
                    if(time.now_time != objData.time)
                    {
                        layui.data('time',{
                            'key':'now_time'
                            ,'value':objData.time
                        });
                    }
                    if(objData.code == 1001)
                    {
                        obj.putTempData('token',null);//清除缓存
                        layer.msg('您登陆凭证已失效，请重新登陆', {icon: 2,time:2500},function()
                        {
                            if (window != top && !obj.isTop())
                            {
                                top.location.href = obj.baseUrl + 'login.html';
                            }
                            else
                            {
                                window.location.href = obj.baseUrl + 'login.html';
                            }
                        });
                    }
                    return data;
                }
                ,error:function(data){
                    layer.msg('网络异常');
                }
            });
        },
        syncReq:function(json)
        {
            jquery.ajax({
                url:obj.getUrl(json.url)
                ,type : json.type ? json.type : "post"
                ,dataType: json.dataType ? json.dataType : "json"
                ,data:json.data
                ,async:json.async ? json.async : false
                ,xhrFields: { withCredentials: true }
                ,success:json.success
                ,dataFilter:function(data, type)
                {
                    //记录当前服务器传递的时间
                    var objData = JSON.parse(data);
                    var time = layui.data('time');
                    if(time.now_time != objData.time)
                    {
                        layui.data('time',{
                            'key':'now_time'
                            ,'value':objData.time
                        });
                    }
                    if(objData.code == 1001)
                    {
                        obj.putTempData('session_code',null);//清除缓存
                        layer.msg('您登陆凭证已失效，请重新登陆', {icon: 2,time:2500},function()
                        {
                            if (window != top && !obj.isTop())
                            {
                                top.location.href = obj.baseUrl + 'login.html';
                            }
                            else
                            {
                                window.location.href = obj.baseUrl + 'login.html';
                            }
                        });
                    }
                    return data;
                }
                ,error:function(data){
                    layer.msg('网络异常');
                }
            });
        },
        hasPower:function(url,show_msg = '')
        {
            var roleData = layui.data('roleData');
            if(!roleData.data)
            {
                if(show_msg !='') layer.msg(show_msg);
                return false;
            }
            var data = JSON.parse(roleData.data);
            if(data.indexOf(url) == -1)
            {
                if(show_msg !='') layer.msg(show_msg);
                return false;
            }
            return true;
        },
        initPowerShow:function(arr,type){
            jquery('.layui-power').hide();
            jquery.each(arr,(k,v)=>{
                if(obj.hasPower(v)){
                    if(type == 1){
                        jquery('.'+v).show();
                    }else{
                        jquery('#'+v).show();
                    }
                    
                }
            })
        },
        inArray:function(search,arr){
            for(var i in arr){
                if(arr[i]===search){
                    return true;
                }
            }
            return false;
        },
        //加载视图
        loadView:function(y)
        {
            var w = y.view;
            var v = y.title;
            if (obj.pageTabs) {
                var u = false;
                jquery(j+">.layui-tab>.layui-tab-title>li").each(function() {
                    if (jquery(this).attr("lay-id") === w) {
                        u = true;
                        return false
                    }
                });
                if (!u) {
                    if ((obj.mTabList.length + 1) >= obj.maxTabNum) {
                        layer.msg("最多打开" + obj.maxTabNum + "个选项卡", {
                            icon: 2
                        });
                        obj.activeNav(obj.mTabPosition);
                        return;
                    }
                    f = true;
                    element.tabAdd(i, {
                        id: w,
                        title: '<span class="title">' + (v ? v : "") + "</span>",
                        content: '<iframe lay-id="' + w + '" src="' + w + '" frameborder="0" class="admin-iframe"></iframe>'
                    });
                    if (w != c) {
                        obj.mTabList.push(y)
                    }
                }
                element.tabChange(i, w);
                obj.activeNav(w);
            } else {
                var t = jquery(j+">.admin-iframe");
                if (!t || t.length <= 0) {
                    var x = '';
                    x += '   <div style="-webkit-overflow-scrolling: touch;">';
                    x += '      <iframe lay-id="' + w + '" src="' + w + '" frameborder="0" class="admin-iframe"></iframe>';
                    x += "   </div>";
                    jquery(j).html(x);
                    if (w != c) {
                        obj.setTabTitle(v)
                    }
                    element.render("breadcrumb")
                } else {
                    t.attr("lay-id", w);
                    t.attr("src", w);
                    obj.setTabTitle(v)
                }
                obj.activeNav(w);
                obj.mTabList.splice(0, obj.mTabList.length);
                if (w != c) {
                    obj.mTabList.push(y);
                    obj.mTabPosition = w
                } else {
                    obj.mTabPosition = undefined
                }
            }
        },
        //更换主题
        changeTheme: function(t) {
            if (t) {
                layui.data(obj.cacheName, {
                    key: "theme",
                    value: t
                });
                if (c == t) {
                    t = undefined
                }
            } else {
                layui.data(obj.cacheName, {
                    key: "theme",
                    remove: true
                })
            }
            try {
                obj.removeTheme(top);
                (t && top.layui) && top.layui.link(obj.getThemeDir() + t + obj.getCssSuffix(), t);
                var u = top.window.frames;
                for (var p = 0; p < u.length; p++) {
                    try {
                        var r = u[p];
                        obj.removeTheme(r);
                        if (t && r.layui) {
                            r.layui.link(obj.getThemeDir() + t + obj.getCssSuffix(), t)
                        }
                        var q = r.frames;
                        for (var o = 0; o < q.length; o++) {
                            try {
                                var n = q[o];
                                obj.removeTheme(n);
                                if (t && n.layui) {
                                    n.layui.link(obj.getThemeDir() + t + obj.getCssSuffix(), t)
                                }
                            } catch (s) {}
                        }
                    } catch (s) {}
                }
            } catch (s) {}
        },
        removeTheme: function(n) {
            if (!n) {
                n = window;
            }
            if (n.layui) {
                var o = "layuicss-theme";
                n.layui.jquery('link[id^="' + o + '"]').remove();
            }
        },
        //主题目录
        getThemeDir: function() {
            return layui.cache.base + "theme/";
        },
        //获取css地址
        getCssSuffix: function() {
            var n = ".css";
            if (obj.version != undefined) {
                n += "?v=";
                if (obj.version == true) {
                    n += new Date().getTime();
                } else {
                    n += obj.version;
                }
            }
            return n;
        },

        //获取缓存
        getTempData: function(o) {
            var n = obj.cacheName;
            var p = layui.data(n);
            if (p) {
                return p[o];
            } else {
                return false
            }
        },

        //进行缓存
        putTempData: function(o, p) {
            var n = obj.cacheName;
            if (p != undefined && p != null) {
                layui.data(n, {
                    key: o,
                    value: p
                })
            } else {
                layui.data(n, {
                    key: o,
                    remove: true
                })
            }
        },

        //设置标题
        setTabTitle: function(u, t) {
            if (!obj.pageTabs) {
                if (u) {
                    jquery(q).addClass("show");
                    var v = jquery(q + ">.layui-body-header-title");
                    v.html(u);
                    v.next(".layui-breadcrumb").find("cite").last().text(u)
                } else {
                    jquery(q).removeClass("show")
                }
            } else {
                u || (u = "");
                t || (t = jquery(n + ">.layui-tab-title>li.layui-this").attr("lay-id"));
                t && jquery(n + '>.layui-tab-title>li[lay-id="' + t + '"] .title').html(u)
            }
        },

        //加载当前左边菜单项
        activeNav: function(o) {
            if (!o) {
                o = window.location.pathname;
                o = o.substring(o.indexOf("/"))
            }
            if (o && o != "") {
                var r = jquery('a[lay-href="' + o + '"]');
                if (r && r.length > 0) {
                    //重新布局
                    r.parents('ul').find('li').not(r.parents('li')).removeClass('layui-nav-itemed').find('.layui-nav-child').css("display", "none");
                    jquery(e + ">.layui-nav-item").removeClass("layui-nav-itemed");
                    jquery(e + ">.layui-nav-child").css("display", "none");
                    jquery(".layui-nav-child > dd").removeClass("layui-this");
                    r.parents('li').addClass('layui-nav-itemed').find(".layui-nav-child").css("display", "none").children('dd').removeClass('layui-nav-itemed');
                    r.parents('.layui-nav-child').css("display", "block");
                    r.parent('dd').addClass("layui-this").parents('dd').addClass('layui-nav-itemed');
                    if(is_phone)
                    {
                        jquery('.layui-layout-admin').addClass('admin-nav-mini');
                    }
                }
            } else {
                console.warn("active url is null")
            }
        },
        //获取高度
        getPageHeight: function() {
            return document.documentElement.clientHeight || document.body.clientHeight
        },
        //获取宽度
        getPageWidth: function() {
            return document.documentElement.clientWidth || document.body.clientWidth
        },

        //是否显示或者隐藏加载条
        isLoading: function(f,b) {
            setTimeout(function ()
            {
                var jq = jquery("body");
                if (b) {
                    jq = jquery("body" , parent.document);
                }
                var p = jq.children(".page-loading");
                f ? p.show() : p.hide();
                jquery(b).removeClass("page-no-scroll");
            }, window == top ? 400 : 500);
        },
        //动画居中
        rollPage: function(q) {
            var o = jquery(n + ">.layui-tab-title");
            var p = o.scrollLeft();
            if ("left" === q) {
                o.animate({
                    "scrollLeft": p - 120
                }, 100)
            } else {
                if ("auto" === q) {
                    var n = 0;
                    o.children("li").each(function() {
                        if (jquery(this).hasClass("layui-this")) {
                            return false
                        } else {
                            n += jquery(this).outerWidth()
                        }
                    });
                    o.animate({
                        "scrollLeft": n - 120
                    }, 100)
                } else {
                    o.animate({
                        "scrollLeft": p + 120
                    }, 100)
                }
            }
        },
        //刷新当前页面
        refresh: function(a) {
            var p;
            if (!a) {
                p = jquery(n + ">.layui-tab-content>.layui-tab-item.layui-show>.admin-iframe");
                if (!p || p.length <= 0) {
                    p = jquery(j + ">div>.admin-iframe")
                }
            } else {
                p = jquery(n + '>.layui-tab-content>.layui-tab-item>.admin-iframe[lay-id="' + a + '"]');
                if (!p || p.length <= 0) {
                    p = jquery(a + ">.admin-iframe")
                }
            }
            if (p && p[0]) {
                try {
                    p[0].contentWindow.location.reload(true)
                } catch (o) {
                    p.attr("src", p.attr("src"))
                }
            } else {
                console.warn(n + " is not found")
            }
        },
        refresh1:function(a){
            window.location.reload();
        },
        closeTabOperNav: function() {//关闭菜单
            jquery(".layui-icon-down .layui-nav .layui-nav-child").removeClass("layui-show")
        },
        //右边展示
        popupRight: function(n) {
            if (n.title == undefined) {
                n.title = false;
                n.closeBtn = false;
            }
            if (n.fixed == undefined) {
                n.fixed = true;
            }
            n.anim = -1;
            n.offset = "r";
            n.shadeClose = true;
            n.area || (n.area = "336px");
            n.skin || (n.skin = "layui-anim layui-anim-rl layui-layer-adminRight");
            n.move = false;
            return obj.open(n);
        },
        //打开页面
        open: function(p) {
            if (!p.area) {
                p.area = (p.type == 2) ? ["360px", "300px"] : "360px"
            }
            if (!p.skin) {
                p.skin = "layui-layer-admin"
            }
            if (!p.offset) {
                if (obj.getPageWidth() < 768) {
                    p.offset = "15px"
                } else {
                    if (window == top) {
                        p.offset = "70px"
                    } else {
                        p.offset = "40px"
                    }
                }
            }
            if (p.fixed == undefined) {
                p.fixed = false
            }
            p.resize = p.resize != undefined ? p.resize : false;
            p.shade = p.shade != undefined ? p.shade : 0.1;
            var n = p.end;
            p.end = function() {
                layer.closeAll("tips");
                n && n()
            };
            if (p.url) {
                (p.type == undefined) && (p.type = 1);
                var o = p.success;
                p.success = function(q, r) {
                    obj.showLoading(q, 2);
                    jquery(q).children(".layui-layer-content").load(p.url, function() {
                        o ? o(q, r) : "";
                        obj.removeLoading(q, false);
                    })
                }
            }
            return layer.open(p);
        },
        //显示加载条
        showLoading: function(r, q, o) {
            var p;
            if (r != undefined && (typeof r != "string") && !(r instanceof h)) {
                q = r.type;
                o = r.opacity;
                p = r.size;
                r = r.elem;
            }(!r) && (r = "body");
            (q == undefined) && (q = 1);
            (p == undefined) && (p = "sm");
            p = " " + p;
            var n = ['<div class="ball-loader' + p + '"><span></span><span></span><span></span><span></span></div>', '<div class="rubik-loader' + p + '"></div>', '<div class="signal-loader' + p + '"><span></span><span></span><span></span><span></span></div>'];
            jquery(r).addClass("page-no-scroll");
            var s = jquery(r).children(".page-loading");
            if (s.length <= 0) {
                jquery(r).append('<div class="page-loading">' + n[q - 1] + "</div>");
                s = jquery(r).children(".page-loading");
            }
            o && s.css("background-color", "rgba(255,255,255," + o + ")");
            s.show();
        },
        //移除加载条
        removeLoading: function(o, q, n) {
            if (!o) {
                o = "body";
            }
            if (q == undefined) {
                q = true;
            }
            var p = jquery(o).children(".page-loading");
            if (n) {
                p.remove();
            } else {
                q ? p.fadeOut() : p.hide();
            }
            jquery(o).removeClass("page-no-scroll");
        },
        closeThisDialog: function(n) {
            if(n)
            {
                var o = jquery(n).parents(".layui-layer").attr("id").substring(11);
                layer.close(o)
            }
            else
            {
                parent.layer.close(parent.layer.getFrameIndex(window.name))
            }
        },
        isTop: function() {
            return jquery(j).length > 0
        },

        cropImg:function(q) {
            var o = "image/jpeg";
            var v = q.aspectRatio;
            var w = q.imgSrc;
            var t = q.imgType;
            var r = q.onCrop;
            var s = q.limitSize;
            var u = q.acceptMime;
            var p = q.exts;
            var n = q.title;
            (v == undefined) && (v = 1 / 1);
            (n == undefined) && (n = "裁剪图片");
            t && (o = t);
            layui.use(['Cropper',"upload"], function() {
                var y = layui.Cropper;
                var x = layui.upload;
                function z() {
                    var C, D = jquery("#ew-crop-img");
                    var E = {
                        elem: "#ew-crop-img-upload",
                        auto: false,
                        drag: false,
                        choose: function(F) {
                            F.preview(function(H, I, G) {
                                o = I.type;
                                D.attr("src", G);
                                if (!w || !C) {
                                    w = G;
                                    z()
                                } else {
                                    C.destroy();
                                    C = new y(D[0], B)
                                }
                            })
                        }
                    };
                    (s != undefined) && (E.size = s);
                    (u != undefined) && (E.acceptMime = u);
                    (p != undefined) && (E.exts = p);
                    x.render(E);
                    if (!w) {
                        jquery("#ew-crop-img-upload").trigger("click");
                        return
                    }
                    var B = {
                        aspectRatio: v,
                        preview: "#ew-crop-img-preview"
                    };
                    C = new y(D[0], B);
                    jquery(".ew-crop-tool").on("click", "[data-method]", function() {
                        var G = jquery(this).data(),
                            H, F;
                        if (!C || !G.method) {
                            return
                        }
                        G = jquery.extend({}, G);
                        H = C.cropped;
                        switch (G.method) {
                            case "rotate":
                                if (H && B.viewMode > 0) {
                                    C.clear()
                                }
                                break;
                            case "getCroppedCanvas":
                                if (o === "image/jpeg") {
                                    if (!G.option) {
                                        G.option = {}
                                    }
                                    G.option.fillColor = "#fff"
                                }
                                break
                        }
                        F = C[G.method](G.option, G.secondOption);
                        switch (G.method) {
                            case "rotate":
                                if (H && B.viewMode > 0) {
                                    C.crop()
                                }
                                break;
                            case "scaleX":
                            case "scaleY":
                                jquery(this).data("option", -G.option);
                                break;
                            case "getCroppedCanvas":
                                if (F) {
                                    r && r(F.toDataURL(o));
                                    obj.closeThisDialog("#ew-crop-img");
                                } else {
                                    layer.msg("裁剪失败", {
                                        icon: 2,
                                        anim: 6
                                    })
                                }
                                break
                        }
                    })
                }
                var A = '<div class="layui-row">';
                A += '        <div class="layui-col-sm8" style="min-height: 9rem;">';
                A += '             <img id="ew-crop-img" src="' + (w ? w : "") + '" style="max-width:100%;" />';
                A += "        </div>";
                A += '        <div class="layui-col-sm4 layui-hide-xs" style="padding: 0 20px;text-align: center;">';
                A += '             <div id="ew-crop-img-preview" style="width: 100%;height: 9rem;overflow: hidden;display: inline-block;border: 1px solid #dddddd;"></div>';
                A += "        </div>";
                A += "   </div>";
                A += '   <div class="text-center ew-crop-tool" style="padding: 15px 10px 5px 0;">';
                A += '        <div class="layui-btn-group" style="margin-bottom: 10px;margin-left: 10px;">';
                A += '             <button title="放大" data-method="zoom" data-option="0.1" class="layui-btn icon-btn" type="button"><i class="layui-icon layui-icon-add-1"></i></button>';
                A += '             <button title="缩小" data-method="zoom" data-option="-0.1" class="layui-btn icon-btn" type="button"><span style="display: inline-block;width: 12px;height: 2.5px;background: rgba(255, 255, 255, 0.9);vertical-align: middle;margin: 0 4px;"></span></button>';
                A += "        </div>";
                A += '        <div class="layui-btn-group layui-hide-xs" style="margin-bottom: 10px;">';
                A += '             <button title="向左旋转" data-method="rotate" data-option="-45" class="layui-btn icon-btn" type="button"><i class="layui-icon layui-icon-refresh-1" style="transform: rotateY(180deg) rotate(40deg);display: inline-block;"></i></button>';
                A += '             <button title="向右旋转" data-method="rotate" data-option="45" class="layui-btn icon-btn" type="button"><i class="layui-icon layui-icon-refresh-1" style="transform: rotate(30deg);display: inline-block;"></i></button>';
                A += "        </div>";
                A += '        <div class="layui-btn-group" style="margin-bottom: 10px;">';
                A += '             <button title="左移" data-method="move" data-option="-10" data-second-option="0" class="layui-btn icon-btn" type="button"><i class="layui-icon layui-icon-left"></i></button>';
                A += '             <button title="右移" data-method="move" data-option="10" data-second-option="0" class="layui-btn icon-btn" type="button"><i class="layui-icon layui-icon-right"></i></button>';
                A += '             <button title="上移" data-method="move" data-option="0" data-second-option="-10" class="layui-btn icon-btn" type="button"><i class="layui-icon layui-icon-up"></i></button>';
                A += '             <button title="下移" data-method="move" data-option="0" data-second-option="10" class="layui-btn icon-btn" type="button"><i class="layui-icon layui-icon-down"></i></button>';
                A += "        </div>";
                A += '        <div class="layui-btn-group" style="margin-bottom: 10px;">';
                A += '             <button title="左右翻转" data-method="scaleX" data-option="-1" class="layui-btn icon-btn" type="button" style="position: relative;width: 41px;"><i class="layui-icon layui-icon-triangle-r" style="position: absolute;left: 9px;top: 0;transform: rotateY(180deg);font-size: 16px;"></i><i class="layui-icon layui-icon-triangle-r" style="position: absolute; right: 3px; top: 0;font-size: 16px;"></i></button>';
                A += '             <button title="上下翻转" data-method="scaleY" data-option="-1" class="layui-btn icon-btn" type="button" style="position: relative;width: 41px;"><i class="layui-icon layui-icon-triangle-d" style="position: absolute;left: 11px;top: 6px;transform: rotateX(180deg);line-height: normal;font-size: 16px;"></i><i class="layui-icon layui-icon-triangle-d" style="position: absolute; left: 11px; top: 14px;line-height: normal;font-size: 16px;"></i></button>';
                A += "        </div>";
                A += '        <div class="layui-btn-group" style="margin-bottom: 10px;">';
                A += '             <button title="重新开始" data-method="reset" class="layui-btn icon-btn" type="button"><i class="layui-icon layui-icon-refresh"></i></button>';
                A += '             <button title="选择图片" id="ew-crop-img-upload" class="layui-btn icon-btn" type="button"><i class="layui-icon layui-icon-upload-drag"></i></button>';
                A += "        </div>";
                A += '        <button data-method="getCroppedCanvas" data-option="{ &quot;maxWidth&quot;: 4096, &quot;maxHeight&quot;: 4096 }" class="layui-btn icon-btn" type="button" style="margin-left: 10px;margin-bottom: 10px;"><i class="layui-icon">&#xe605;</i>完成</button>';
                A += "   </div>";
                obj.open({
                    title: n,
                    area: "665px",
                    type: 1,
                    content: A,
                    success: function(B, C) {
                        jquery(B).children(".layui-layer-content").css("overflow", "visible");
                        z()
                    }
                })
            })
        },
        toBlob:function(res,filename = 'file')//base64 转文件流
        {
            let arr = res.split(',')

            let mime = arr[0].match(/:(.*?);/)[1]

            let suffix = mime.split('/')[1]

            let bstr = atob(arr[1])

            let n = bstr.length

            let u8arr = new Uint8Array(n)

            while (n--) {

                u8arr[n] = bstr.charCodeAt(n)

            }

            return new File([u8arr], `${filename}.${suffix}`, {

                type: mime

            })
        },
        setOption1:function(arr,obj,val=''){
            var str = '';
            if(val==undefined) val='';
            jquery.each(arr,(k,v)=>{
                if(val == k){
                    str+='<option selected value="'+k+'">'+v+'</option>';
                }else{
                    str+='<option value="'+k+'">'+v+'</option>';
                }
                
            })

            obj.html(str);
        },
        arrRemove:function(arr,val) {
            var index = arr.indexOf(val);
            if (index > -1) {
                arr.splice(index, 1);
            }
            return arr;
        },
        isObject:function(obj) {
            return Object.prototype.toString.call(obj) === '[object Object]'
        },
        isArray:function(arr) {
            return Array.isArray(arr)
        },
        merge:function(target, ...arg) {
            return arg.reduce((acc, cur) => {
                return Object.keys(cur).reduce((subAcc, key) => {
                    const srcVal = cur[key]
              if (obj.isObject(srcVal)) {
                  subAcc[key] = obj.merge(subAcc[key] ? subAcc[key] : {}, srcVal)
              } else if (obj.isArray(srcVal)) {
                  // series: []，下层数组直接赋值
                  subAcc[key] = srcVal.map((item, idx) => {
                      if (obj.isObject(item)) {
                          const curAccVal = subAcc[key] ? subAcc[key] : []
                    return obj.merge(curAccVal[idx] ? curAccVal[idx] : {}, item)
                  } else {
                          return item
                  }
                  })
              } else {
                  subAcc[key] = srcVal
              }
              return subAcc
            }, acc)
          }, target)
        },
        tableFieldWith:function(str){
            // return 20;
            if(typeof str === 'string'){
                var length = str.length;
            }else{
                var length = 0;
            }

            return 58+(length-2)*14;
        },
        setDataInfoHtml:function(res,depth){

            var res_str = '';
            if(obj_type.indexOf(typeof res) == -1){
                return 'end';
            }
            jquery.each(res,function(k,v){
                if(data_info_row%2){
                    var str = '<tr>';
                }else{
                    var str = '<tr class="active">';
                }

                for (var i = 0; i < depth; i++) {
                    str+='<td> </td>';
                }
                str+='<td>'+k+'</td>';

                if(obj_type.indexOf(typeof v) > -1){//common.isObject(v)
                    res_str+=str+'</tr>';
                    res_str+=obj.setDataInfoHtml(v,depth+1);
                }else{
                    res_str+=str+'<td>'+v+'</td></tr>';
                }
                if(depth == 0){
                    data_info_row++;
                }
            })

            return res_str;
        },
        //点击事件
        events:{
            refresh: function() {//刷新
                obj.refresh();
            },
            refresh1: function(a) {//刷新
                obj.refresh1(a);
            },
            theme: function() {//主题
                var n = jquery(this).data("url");
                obj.popupRight({
                    id: "layer-theme",
                    type: 2,
                    content: n ? n : obj.baseUrl+"view/theme/index.html"
                })
            },
            flexible: function() {//显示 or 隐藏左边菜单
                var o = jquery(".layui-layout-admin").hasClass("admin-nav-mini");
                if (o) {
                    //显示左边菜单
                    jquery(".layui-layout-admin").removeClass("admin-nav-mini");
                } else {
                    //隐藏左边菜单
                    jquery(".layui-layout-admin").addClass("admin-nav-mini");
                }
            },
            logout: function() {//退出
                layer.confirm("确定要退出登录吗？", {
                    title: "温馨提示",
                    skin: "layui-layer-admin"
                }, function() {
                    //退出登陆
                    obj.req({
                        url:'user/logout',
                        success:function(json)
                        {
                            if(json.code == 0)
                            {
                                layui.data('roleData', null);
                                layui.data('userData', null);
                                obj.putTempData('session_code',null);
                                layer.msg(json.msg,{icon:1,time:1500},function()
                                {
                                    window.location.href = obj.baseUrl+'login.html';
                                });
                            }
                            else
                            {
                                layer.msg(json.msg, {icon: 2});
                            }
                        }
                    });
                });
            },
            psw: function() {//修改密码
                var n = jquery(this).data("url");
                obj.open({
                    id: "pswForm",
                    type: 2,
                    title: "修改密码",
                    area: ["360px", "340px"],
                    shade: 0,
                    content: n ? n : obj.baseUrl+"view/user/password.html"
                })
            },
            changePlatform: function(){
                var name = jquery(this).attr('data-val');
                var suffix = jquery(this).attr('data-key');
                obj.putTempData('platform',suffix);
                jquery('#platform_name').html(name)
                obj.refresh1()
            },
            header_url: function() {//更换头像
                obj.req({
                    url:'user_base/oauth',
                    data:{upload_type:'base'},
                    success:function(json)
                    {
                        if(json.code == 1)
                        {
                            obj.cropImg({
                                limitSize:json.data.size
                                ,exts:json.data.ext.join('|')
                                ,onCrop: function (res) {
                                    var formData = new FormData();
                                    var files = [obj.toBlob(res),obj.toBlob(res)];
                                    formData.append("sign", json.data.sign);
                                    jquery.each(files, function(i, t){
                                        formData.append('files[]', t);
                                    });
                                    jquery.ajax({
                                        url:obj.commonUrl+'upload/index',
                                        type:"POST",
                                        dataType: "json",
                                        data:formData,
                                        async:false,
                                        cache:false,
                                        contentType:false,
                                        processData:false,
                                        success:function(json1){
                                            if(json1.code == 1)
                                            {
                                                obj.req({
                                                    url:'user/upload',
                                                    data:{file:json1.data.list[0].file,md5:json1.data.list[0].md5},
                                                    success:function(json2)
                                                    {
                                                        if(json.code == 1)
                                                        {
                                                            jquery('#username').html('<img src="'+json2.data.src+'" id="header_url" style="margin-top:0" class="layui-nav-img">').parent().css({'marginTop':'8px'});
                                                        }
                                                        else if(json.code != 3)
                                                        {
                                                            layer.msg(json.msg, {icon: 2});
                                                        }
                                                        return false;
                                                    }
                                                });
                                            }
                                            else if(json1.code != 3)
                                            {
                                                layer.msg(json1.msg, {icon: 2});
                                            }
                                        },
                                        error:function(json){
                                            console.info(json);
                                            alert("error:"+json);
                                        }
                                    });
                                }
                            });
                        }
                        else if(json.code != 3)
                        {
                            layer.msg(json.msg, {icon: 2});
                        }
                    }
                });
            },
            update:function()//清除缓存
            {
                obj.req({
                    url:'user/clear',
                    success:function(json)
                    {
                        
                        if(json.code == 0)
                        {
                            layui.data('roleData', null);
                            layui.data('userData', null);
                            layer.msg(json.msg, {icon: 1,time:1500},function()
                            {
                                window.location.href = obj.baseUrl+'index.html';
                            });
                        }
                        else
                        {
                            layer.msg(json.msg, {icon: 2});
                        }
                    }
                });
            },
            closeDialog: function(n) {//关闭提示框
                obj.closeThisDialog();
            },
            fullScreen: function() {//全屏显示
                var u = "layui-icon-screen-full",
                    n = "layui-icon-screen-restore";
                var r = jquery(this).find("i");
                var q = document.fullscreenElement || document.msFullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || false;
                if (q) {
                    var p = document.exitFullscreen || document.webkitExitFullscreen || document.mozCancelFullScreen || document.msExitFullscreen;
                    if (p) {
                        p.call(document)
                    } else {
                        if (window.ActiveXObject) {
                            var o = new ActiveXObject("WScript.Shell");
                            o && o.SendKeys("{F11}")
                        }
                    }
                    r.addClass(u).removeClass(n)
                } else {
                    var s = document.documentElement;
                    var t = s.requestFullscreen || s.webkitRequestFullscreen || s.mozRequestFullScreen || s.msRequestFullscreen;
                    if (t) {
                        t.call(s)
                    } else {
                        if (window.ActiveXObject) {
                            var o = new ActiveXObject("WScript.Shell");
                            o && o.SendKeys("{F11}")
                        }
                    }
                    r.addClass(n).removeClass(u)
                }
            },
            closeThisTabs: function() {
                obj.closeTabOperNav();
                var o = jquery(n + ">.layui-tab-title");
                if (o.find("li").first().hasClass("layui-this")) {
                    layer.msg("主页不能关闭", {
                        icon: 2
                    });
                    return
                }
                o.find("li.layui-this").find(".layui-tab-close").trigger("click");
            },
            closeOtherTabs: function() {
                jquery(n + ">.layui-tab-title li:gt(0)").each(function() {
                    if (!jquery(this).hasClass('layui-this')) {
                        jquery(this).find(".layui-tab-close").trigger("click");
                    }
                })
                obj.closeTabOperNav();
            },
            closeAllTabs: function() {
                jquery(n + ">.layui-tab-title li:gt(0)").find(".layui-tab-close").trigger("click");
                jquery(n + ">.layui-tab-title li:eq(0)").trigger("click");
                obj.closeTabOperNav();
            },
            closePageDialog: function() {
                obj.closeThisDialog(this);
            }
        },
    };
    var tab = layui.data(obj.cacheName);
    if (tab) {
        if (tab.openTab != undefined) {
            obj.pageTabs = tab.openTab;
        }
        if (tab.cacheTab != undefined) {
            obj.cacheTab = tab.cacheTab;
        }
    }

    if (jquery(g).length <= 0) {
        jquery(".layui-layout-admin").append('<div class="site-mobile-shade"></div>')
    }
    if (obj.pageTabs && jquery(n).length <= 0) {
        var e = '<div class="layui-tab" lay-allowClose="true" lay-filter="admin-pagetabs">';
        e += '       <ul class="layui-tab-title"></ul>';
        e += '      <div class="layui-tab-content"></div>';
        e += "   </div>";
        e += '   <div class="layui-icon admin-tabs-control layui-icon-prev" ew-event="leftPage"></div>';
        e += '   <div class="layui-icon admin-tabs-control layui-icon-next" ew-event="rightPage"></div>';
        e += '   <div class="layui-icon admin-tabs-control layui-icon-down">';
        e += '      <ul class="layui-nav admin-tabs-select" lay-filter="admin-pagetabs-nav">';
        e += '         <li class="layui-nav-item" lay-unselect>';
        e += "            <a></a>";
        e += '            <dl class="layui-nav-child layui-anim-fadein">';
        e += '               <dd ew-event="closeThisTabs" lay-unselect><a>关闭当前标签页</a></dd>';
        e += '               <dd ew-event="closeOtherTabs" lay-unselect><a>关闭其它标签页</a></dd>';
        e += '               <dd ew-event="closeAllTabs" lay-unselect><a>关闭全部标签页</a></dd>';
        e += "            </dl>";
        e += "         </li>";
        e += "      </ul>";
        e += "   </div>";
        jquery(j).html(e);
        element.render("nav")
    }

    //点击事件：ew-event
    jquery(document).on("click", "*[ew-event]", function() {
        var n = jquery(this).attr("ew-event");
        var o = obj.events[n];
        o && o.call(this, jquery(this))
    });

    //左边菜单点击
    element.on("nav(" + d + ")", function(w) {
        var v = jquery(w);
        var t = v.attr("lay-href");
        var x = v.attr("lay-id");
        if (!x) {
            x = t
        }
        var flag = false;
        if(v.parent().parent().children().hasClass('layui-nav-itemed'))
        {
            flag = true;
        }
        if(flag)
        {
            v.parent().parent().children().removeClass('layui-nav-itemed').children('.layui-nav-child').slideUp('fast');
            v.parent().addClass('layui-nav-itemed').children('.layui-nav-child').slideDown("fast");
        }
        else
        {
            v.parent().removeClass('layui-nav-itemed').children('.layui-nav-child').slideUp("fast");
        }
        if (t && t != "javascript:;") {
            var u = v.attr("ew-title");
            u || (u = v.text().replace(/(^\s*)|(\s*$)/g, ""));
            obj.loadView({
                view: t,
                title: u
            })
        }
    });
    element.on("tab(" + i + ")", function(v) {
        var u = jquery(this).attr("lay-id");
        if (u != c) {
            obj.mTabPosition = u;
        } else {
            obj.mTabPosition = undefined;
        }
        obj.rollPage("auto");
        obj.activeNav(u);
        var t = jquery(n).attr("lay-autoRefresh");
        if (t === "true" && !f) {
            obj.refresh(u);
        }
        f = false;
    });
    element.on("tabDelete(" + i + ")", function(v) {
        var t = obj.mTabList[v.index - 1];
        if (t) {
            var u = t.view;
            obj.mTabList.splice(v.index - 1, 1);
            if (k[u]) {
                k[u].call();
            }
        }
        if (jquery(n + ">.layui-tab-title>li.layui-this").length <= 0) {
            jquery(n + ">.layui-tab-title>li:last").trigger("click");
        }
    });

    //右边经过展示
    jquery(document).on("mouseenter", l + "," + l + " .layui-nav-child>dd", function() {
        var o = jquery(this),
            q = o.find(">.layui-nav-child");
        if (q.length > 0) {
            o.addClass("admin-nav-hover");
            q.css("left", o.offset().left + o.outerWidth());
            var p = o.offset().top;
            if (p + q.outerHeight() > obj.getPageHeight()) {
                p = p - q.outerHeight() + o.outerHeight();
                (p < 60) && (p = 60);
                q.addClass("show-top")
            }
            q.css("top", p);
            q.addClass("ew-anim-drop-in")
        } else {
            if (o.hasClass("layui-nav-item")) {
                var n = o.find("cite").text();
                layer.tips(n, o, {
                    tips: [2, "#303133"],
                    time: -1,
                    success: function(r, s) {
                        h(r).css("margin-top", "12px")
                    }
                })
            }
        }
    }).on("mouseleave", l + "," + l + " .layui-nav-child>dd", function() {
        layer.closeAll("tips");
        var o = jquery(this);
        o.removeClass("admin-nav-hover");
        var n = o.find(">.layui-nav-child");
        n.removeClass("show-top ew-anim-drop-in");
        n.css({
            "left": "unset",
            "top": "unset"
        })
    });
    jquery(document).on("mouseenter", "*[lay-tips]", function() {
        var n = jquery(this).attr("lay-tips");
        var o = jquery(this).attr("lay-direction");
        var p = jquery(this).attr("lay-bg");
        var q = jquery(this).attr("lay-offset");
        layer.tips(n, this, {
            tips: [o || 1, p || "#303133"],
            time: -1,
            success: function(r, s) {
                if (q) {
                    q = q.split(",");
                    var u = q[0],
                        t = q.length > 1 ? q[1] : undefined;
                    u && (h(r).css("margin-top", u));
                    t && (h(r).css("margin-left", t))
                }
            }
        })
    }).on("mouseleave", "*[lay-tips]", function() {
        layer.closeAll("tips")
    });

    //主题
    var zt = layui.data(obj.cacheName);
    if (zt && zt.theme) {
        (zt.theme == c) || layui.link(obj.getThemeDir() + zt.theme + obj.getCssSuffix(), zt.theme)
    } else {
        if (c != obj.defaultTheme) {
            layui.link(obj.getThemeDir() + obj.defaultTheme + obj.getCssSuffix(), obj.defaultTheme)
        }
    }

    function getUrlParam()
    {
        var param = {};
        var query = window.location.search.substring(1);
        var vars = query.split("&");
        for (var i=0;i<vars.length;i++) {
            var pair = vars[i].split("=");
            // if(pair[0] == variable){return pair[1];}
            param[pair[0]] = pair[1]
        }

        return param;
    }




    s("common", obj)
});
