<?php

use extend\GamekeySign\GamekeySignBase;
use common\libraries\Logger;

 final class rxxcx extends GamekeySignBase
{

    public $from = 'zhangWan';

    public $return_form = 2; //判断是否需要返回转接口的所有数据

    private $secret = 'skHVv95EI7DG1sAzdNZZxlFDyG3IKCre';

    public $uid_to_sdkid_url = "http://us.hnzwwl.cn/api/get_sdkuid.php";

    public $sdkid_to_uid_url = "http://us.hnzwwl.cn/api/get_sdkuid.php";

    public $api_url = 'http://api.4399data.com/?r=banType/ban';

    const BANCHAT = 1;

    const UNBANCHAT = 2;

    const BANROLE = 3;

    const UNBANROLE = 4;

    const ISCHECK = 5;

    public function __construct(){

    }

    #根据cp给的聚合uid换成平台自身的uid，用于信息推送时候替换成自己平台的uid,type1代表掌玩聚合id换平台id，2代表平台id换掌玩聚合id
    public function uid_to_sdkid_url($sdkid){

        if(empty($sdkid)){
            return false;
        }

        $time = time();
        $key = 'c1b5d4dc0084b4db0af583f8d399d980';
        $sign = md5($sdkid.$time.$key);
        $post_data = [
            'uid'  => $sdkid,
            'time' => $time,
            'sign' => $sign,
            'type' => 2
        ];

        $res = $this->fetchUrl($this->sdkid_to_uid_url.'?'.http_build_query($post_data));
        $res = json_decode($res,1);

        if(isset($res['code']) && $res['code'] == 1){
            $uid = $res['data']['success'][0]['uid'];
            return $uid;

        }else{
            return false;
        }

    }

    private function dealParams($data,$deal_type)
    {

        $key = '8ccdd42cbad3c338798476a0e665';
        $platform = 'mix_wxyouyu';
        $game = 'rxjh';
        $time = time();

        $send_data['game']          = $game;
        $send_data['platform']      = $platform;
        $send_data['server']        = isset($data['sid']) ? trim($data['sid'],'S') : '';
        $send_data['banType']       = $data['banType'] ?? '';
        $send_data['data']          = $data['roleid'] ?? '';
        $send_data['status']        = $deal_type == 1 ? $deal_type : 0;
        $send_data['admin']         = 'system';
        $send_data['banDuration']   = round($data['blocktime'])/60 ?: '';
        $send_data['time']          = $time;

        $send_data['flag'] = $send_data['data'].$send_data['server'].$send_data['time'].$key;

        //自查需要特定参数
        if($data['type'] == self::ISCHECK){
            $send_data['check'] = 1;
            $send_data['roleId'] = $data['roleid'] ?: '';
            $send_data['roleName'] = $data['uname'] ?: '';
            $send_data['accountName'] = $data['uid'] ?: '';
            $send_data['platform'] = 'fn_pid';

        }

        return $send_data;

    }
    public function roleChat($data,$deal_type)
    {

        //1封禁 2解禁
        $data['banType'] = 'BanRoleIdChat';
        $send_data = $this->dealParams($data,$deal_type);
        $res = $this->curl_init_post($this->api_url,$send_data);

        Logger::write([
            'tag' => 'postRes',
            'url' => $this->api_url,
            'data'=>json_encode($send_data),
            'msg' => $res,
        ]);

        $res = json_decode($res,1);

        if($res['ret'] === 0){
            return true;
        }else{
            return false;
        }

    }


    public function roleBlock($data,$deal_type)
    {

        //1封禁 2解禁
        $data['banType'] = 'BanRoleId';
        $send_data = $this->dealParams($data,$deal_type);
        $res = $this->curl_init_post($this->api_url,$send_data);

//        $res = json_encode(['ret' =>0]);
        Logger::write([
            'tag' => 'postRes',
            'url' => $this->api_url,
            'data'=>json_encode($send_data),
            'msg' => $res,
        ]);

        $res = json_decode($res,1);

        if($res['ret'] === 0){
            return true;
        }else{
            return false;
        }
    }


}