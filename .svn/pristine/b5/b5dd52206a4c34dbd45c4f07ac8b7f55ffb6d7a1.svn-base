<?php
/**
 * 系统
 */
namespace common\server\Vip;

use common\base\BasicServer;
use common\model\db_customer\QcConfig;
use common\model\db_customer\RecallCode;
use common\model\db_customer\RecallCodeGroup;
use common\model\db_customer\RecallCodeRe;
use common\server\ListActionServer;
use common\server\SysServer;

class RecallServer extends BasicServer
{
    /*礼包码*/

    public static function codeList($params){
        $res = [
            'data'=>[],
            'count'=>0,
        ];
        $page = getArrVal($params,'page',1);
        $limit = getArrVal($params,'limit',20);
        $is_excel = getArrVal($params,'is_excel',0);

        $where = getDataByField($params,['platform_id','admin_id','up_id'],true,'c.');

        if(!empty($params['code'])){
            $where[] = ['c.code','like',"%".$params['code']."%"];
        }

        if(isset($params['status']) && $params['status'] >= 0){
            $where['c.status'] = $params['status'];
        }

        if(!empty($params['p_up'])){
            $where['c.up_id'] = explode('_',$params['p_up'])[1];
        }

        $model = new RecallCode();

        $count = $model->alias('c')->where(setWhereSql($where,''))->count();

        if(!$count) return $res;

        $list = $model
            ->alias('c')
            ->field('c.*,up.up_name')
            ->join('db_statistic.up_game_product up','c.platform_id = up.platform_id AND c.up_id = up.up_id')
            ->where(setWhereSql($where,''));

        if($page && $limit){
            $list = $list->page($page,$limit);
        }
//            ->fetchSql()
        $list = $list->select()
            ->toArray();

        $admin_list = SysServer::getAdminListCache();
        $status_arr = RecallCode::$status_arr;
        $platform_list = SysServer::getPlatformList();

        foreach ($list as &$item){

            $item['action'] = ListActionServer::checkRecallCodeList($item);

            $this_admin_info = getArrVal($admin_list,$item['admin_id'],[]);
            if($this_admin_info) {
                $item['admin_id_str'] = $this_admin_info['name'];
            }else{
                $item['admin_id_str'] =  '未知';
            }

            $item['status_str'] = getArrVal($status_arr,$item['status'],'未知');

            $this_platform_info = getArrVal($platform_list,$item['platform_id'],[]);
            if($this_platform_info) {
                $item['up_name'].= '('.$this_platform_info['name'].")";
            }else{
                $item['up_name'].=  '(未知)';
            }
        }

        $res['data'] = $list;

        return $res;
    }

    public static function codeConfig(){
        $config = [];

        $config['search_config'] = [
            'platform'=>['radio'=>true],
            'up_product'=>['status'=>1,'radio'=>true,],
            'admin'=>[
                'status'=>1,
                'p_data'=>[
//                    'group_type'=>[QcConfig::USER_GROUP_VIP],
                    'is_active'=>1,
                ],
                'name'=>'admin_id',
                'radio'=>true,
            ],
        ];

        $config['status_arr'] = RecallCode::$status_arr;
        return $config;
    }

    public static function codeDetail($id){
        $info = [];

        if($id){
            $model = new RecallCode();

            $obj = $model->where('id',$id)->find();

            if($obj){
                $info = $obj->toArray();
            }
        }

        $config = [];
        $config['status_arr'] = RecallCode::$status_arr;
        $config['platform_list'] = SysServer::getPlatformListByAdminInfo(self::$user_data);

        return ['data'=>$info,'config'=>$config];
    }

    public static function codeSave($param){

        $id = getArrVal($param,'id',0);

        $model = new RecallCode();
        $param['admin_id'] = self::$user_data['id'];
        if($id){
            $info = $model->where('id',$id)->find();

            if(!$info){
                return false;
            }

            $res = $info->save($param);
        }else{

            $res = $model->create($param);
        }

        return $res;
    }

    /*礼包码-分组*/

    public static function codeGroupList($params){
        $res = [
            'data'=>[],
            'count'=>0,
        ];
        $page = getArrVal($params,'page',1);
        $limit = getArrVal($params,'limit',20);
        $is_excel = getArrVal($params,'is_excel',0);

        $where = getDataByField($params,['platform_id','admin_id'],true,'cg.');

        if(!empty($params['title'])){
            $where[] = ['cg.title','like',"%".$params['title']."%"];
        }

        if(isset($params['status']) && $params['status'] >= 0){
            $where['cg.status'] = $params['status'];
        }

        if(!empty($params['p_up'])){
            $where['cg.up_id'] = explode('_',$params['p_up'])[1];
        }

        $model = new RecallCodeGroup();

        $count = $model->alias('cg')->where(setWhereSql($where,''))->count();

        if(!$count) return $res;

        $list = $model
            ->alias('cg')
            ->field('cg.*,up.up_name')
            ->join('db_statistic.up_game_product up','cg.platform_id = up.platform_id AND cg.up_id = up.up_id')
            ->where(setWhereSql($where,''))
            ->page($page,$limit)
//            ->fetchSql()
            ->select()
            ->toArray();

        $admin_list = SysServer::getAdminListCache();
        $status_arr = RecallCodeGroup::$status_arr;
        $platform_list = SysServer::getPlatformList();

        foreach ($list as &$item){

            $item['action'] = ListActionServer::checkRecallCodeGroupList($item);

            $this_admin_info = getArrVal($admin_list,$item['admin_id'],[]);
            if($this_admin_info) {
                $item['admin_id_str'] = $this_admin_info['name'];
            }else{
                $item['admin_id_str'] =  '未知';
            }

            $item['status_str'] = getArrVal($status_arr,$item['status'],'未知');
            $item['type_str'] = getArrVal(RecallCodeGroup::$type_arr,$item['type'],'未知');

            $this_platform_info = getArrVal($platform_list,$item['platform_id'],[]);
            if($this_platform_info) {
                $item['up_name'].= '('.$this_platform_info['name'].")";
            }else{
                $item['up_name'].=  '(未知)';
            }

            $this_code_arr = self::getCodeByGroupId($item['id']);

            if($this_code_arr){
                $item['code_str'] = implode(',',$this_code_arr);
            }else{
                $item['code_str'] = '';
            }
        }

        $res['data'] = $list;

        return $res;
    }

    public static function codeGroupConfig(){
        $config = [];

        $config['search_config'] = [
            'platform'=>['radio'=>true],
            'up_product'=>['status'=>1,'radio'=>true,],
            'admin'=>[
                'status'=>1,
                'p_data'=>[
//                    'group_type'=>[QcConfig::USER_GROUP_VIP],
                    'is_active'=>1,
                ],
                'name'=>'admin_id',
                'radio'=>true,
            ],
        ];

        $config['status_arr'] = RecallCodeGroup::$status_arr;
        $config['type_arr'] = RecallCodeGroup::$type_arr;
        return $config;
    }

    public static function codeGroupDetail($id){
        $info = [];

        if($id){
            $model = new RecallCodeGroup();

            $obj = $model->where('id',$id)->find();

            if($obj){
                $info = $obj->toArray();
                $info['code'] = [];
                $this_code_arr = self::getCodeByGroupId($id);
                if($this_code_arr){
                    $info['code'] =array_keys($this_code_arr);
                }
            }
        }

        $config = [];
        $config['status_arr'] = RecallCodeGroup::$status_arr;
        $config['type_arr'] = RecallCodeGroup::$type_arr;
        $config['platform_list'] = SysServer::getPlatformListByAdminInfo(self::$user_data);

        return ['data'=>$info,'config'=>$config];
    }

    public static function codeGroupSave($param){

        $id = getArrVal($param,'id',0);

        $model = new RecallCodeGroup();

        $common_field = [
            'platform_id',
            'up_id',
            'type',
            'title',
            'status',
        ];
        $save_data = getDataByField($param,$common_field);
        $save_data['admin_id'] = self::$user_data['id'];
        if($id){
            $info = $model->where('id',$id)->find();

            if(!$info){
                return false;
            }

            $res = $info->save($save_data);
        }else{

            $res = $model->create($save_data);
            if($res){
                $id = $res->id;
            }
        }

        if($res){
            self::combineCode($id,$param['code']);
        }


        return $res;
    }

    public static function combineCode($id,$code){
        $model = new RecallCodeRe();

        $model->where('group_code_id',$id)->delete();

        if(!empty($code)){
            $code_arr = splitToArr($code);

            $insert_data = [];

            foreach ($code_arr as $item){
                $insert_data[] = [
                    'code_id'=>$item,
                    'group_code_id'=>$id,
                ];
            }

            $model->insertAll($insert_data);
        }



    }

    public static function getCodeByGroupId($id){
        $model = new RecallCode();

        $field = 'c.*';

        $where = [
            'r.group_code_id'=>$id,
            'c.status'=>RecallCode::STATUS_OPEN,
        ];

        $list = $model
            ->alias('c')
            ->field($field)
            ->join('recall_code_re r','r.code_id = c.id')
            ->where($where)
            ->select()
            ->toArray();

        $res = [];

        if($list){
            foreach ($list as $item){
                $res[$item['id']] = $item['code'];
            }
        }

        return $res;
    }
}
